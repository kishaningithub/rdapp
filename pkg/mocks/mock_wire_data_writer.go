// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jeroenrinzema/psql-wire (interfaces: DataWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	wire "github.com/jeroenrinzema/psql-wire"
)

// MockDataWriter is a mock of DataWriter interface.
type MockDataWriter struct {
	ctrl     *gomock.Controller
	recorder *MockDataWriterMockRecorder
}

// MockDataWriterMockRecorder is the mock recorder for MockDataWriter.
type MockDataWriterMockRecorder struct {
	mock *MockDataWriter
}

// NewMockDataWriter creates a new mock instance.
func NewMockDataWriter(ctrl *gomock.Controller) *MockDataWriter {
	mock := &MockDataWriter{ctrl: ctrl}
	mock.recorder = &MockDataWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDataWriter) EXPECT() *MockDataWriterMockRecorder {
	return m.recorder
}

// Complete mocks base method.
func (m *MockDataWriter) Complete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Complete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Complete indicates an expected call of Complete.
func (mr *MockDataWriterMockRecorder) Complete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Complete", reflect.TypeOf((*MockDataWriter)(nil).Complete), arg0)
}

// Define mocks base method.
func (m *MockDataWriter) Define(arg0 wire.Columns) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Define", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Define indicates an expected call of Define.
func (mr *MockDataWriterMockRecorder) Define(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Define", reflect.TypeOf((*MockDataWriter)(nil).Define), arg0)
}

// Empty mocks base method.
func (m *MockDataWriter) Empty() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Empty")
	ret0, _ := ret[0].(error)
	return ret0
}

// Empty indicates an expected call of Empty.
func (mr *MockDataWriterMockRecorder) Empty() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Empty", reflect.TypeOf((*MockDataWriter)(nil).Empty))
}

// Row mocks base method.
func (m *MockDataWriter) Row(arg0 []interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Row", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Row indicates an expected call of Row.
func (mr *MockDataWriterMockRecorder) Row(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Row", reflect.TypeOf((*MockDataWriter)(nil).Row), arg0)
}
